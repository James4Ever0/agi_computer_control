Available tools:
[
    Tool(
        name='browser_close',
        title=None,
        description='Close the page',
        inputSchema={
            'type': 'object',
            'properties': {},
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='Close browser',
            readOnlyHint=True,
            destructiveHint=False,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_resize',
        title=None,
        description='Resize the browser window',
        inputSchema={
            'type': 'object',
            'properties': {
                'width': {
                    'type': 'number',
                    'description': 'Width of the browser window'
                },
                'height': {
                    'type': 'number',
                    'description': 'Height of the browser window'
                }
            },
            'required': ['width', 'height'],
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='Resize browser window',
            readOnlyHint=True,
            destructiveHint=False,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_console_messages',
        title=None,
        description='Returns all console messages',
        inputSchema={
            'type': 'object',
            'properties': {},
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='Get console messages',
            readOnlyHint=True,
            destructiveHint=False,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_handle_dialog',
        title=None,
        description='Handle a dialog',
        inputSchema={
            'type': 'object',
            'properties': {
                'accept': {
                    'type': 'boolean',
                    'description': 'Whether to accept the dialog.'
                },
                'promptText': {
                    'type': 'string',
                    'description': 'The text of the prompt in case of a prompt 
dialog.'
                }
            },
            'required': ['accept'],
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='Handle a dialog',
            readOnlyHint=False,
            destructiveHint=True,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_evaluate',
        title=None,
        description='Evaluate JavaScript expression on page or element',
        inputSchema={
            'type': 'object',
            'properties': {
                'function': {
                    'type': 'string',
                    'description': '() => { /* code */ } or (element) => { /* 
code */ } when element is provided'
                },
                'element': {
                    'type': 'string',
                    'description': 'Human-readable element description used to 
obtain permission to interact with the element'
                },
                'ref': {
                    'type': 'string',
                    'description': 'Exact target element reference from the page
snapshot'
                }
            },
            'required': ['function'],
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='Evaluate JavaScript',
            readOnlyHint=False,
            destructiveHint=True,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_file_upload',
        title=None,
        description='Upload one or multiple files',
        inputSchema={
            'type': 'object',
            'properties': {
                'paths': {
                    'type': 'array',
                    'items': {'type': 'string'},
                    'description': 'The absolute paths to the files to upload. 
Can be a single file or multiple files.'
                }
            },
            'required': ['paths'],
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='Upload files',
            readOnlyHint=False,
            destructiveHint=True,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_install',
        title=None,
        description='Install the browser specified in the config. Call this if 
you get an error about the browser not being installed.',
        inputSchema={
            'type': 'object',
            'properties': {},
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='Install the browser specified in the config',
            readOnlyHint=False,
            destructiveHint=True,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_press_key',
        title=None,
        description='Press a key on the keyboard',
        inputSchema={
            'type': 'object',
            'properties': {
                'key': {
                    'type': 'string',
                    'description': 'Name of the key to press or a character to 
generate, such as `ArrowLeft` or `a`'
                }
            },
            'required': ['key'],
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='Press a key',
            readOnlyHint=False,
            destructiveHint=True,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_type',
        title=None,
        description='Type text into editable element',
        inputSchema={
            'type': 'object',
            'properties': {
                'element': {
                    'type': 'string',
                    'description': 'Human-readable element description used to 
obtain permission to interact with the element'
                },
                'ref': {
                    'type': 'string',
                    'description': 'Exact target element reference from the page
snapshot'
                },
                'text': {
                    'type': 'string',
                    'description': 'Text to type into the element'
                },
                'submit': {
                    'type': 'boolean',
                    'description': 'Whether to submit entered text (press Enter 
after)'
                },
                'slowly': {
                    'type': 'boolean',
                    'description': 'Whether to type one character at a time. 
Useful for triggering key handlers in the page. By default entire text is filled
in at once.'
                }
            },
            'required': ['element', 'ref', 'text'],
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='Type text',
            readOnlyHint=False,
            destructiveHint=True,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_navigate',
        title=None,
        description='Navigate to a URL',
        inputSchema={
            'type': 'object',
            'properties': {
                'url': {
                    'type': 'string',
                    'description': 'The URL to navigate to'
                }
            },
            'required': ['url'],
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='Navigate to a URL',
            readOnlyHint=False,
            destructiveHint=True,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_navigate_back',
        title=None,
        description='Go back to the previous page',
        inputSchema={
            'type': 'object',
            'properties': {},
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='Go back',
            readOnlyHint=True,
            destructiveHint=False,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_navigate_forward',
        title=None,
        description='Go forward to the next page',
        inputSchema={
            'type': 'object',
            'properties': {},
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='Go forward',
            readOnlyHint=True,
            destructiveHint=False,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_network_requests',
        title=None,
        description='Returns all network requests since loading the page',
        inputSchema={
            'type': 'object',
            'properties': {},
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='List network requests',
            readOnlyHint=True,
            destructiveHint=False,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_pdf_save',
        title=None,
        description='Save page as PDF',
        inputSchema={
            'type': 'object',
            'properties': {
                'filename': {
                    'type': 'string',
                    'description': 'File name to save the pdf to. Defaults to 
`page-{timestamp}.pdf` if not specified.'
                }
            },
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='Save as PDF',
            readOnlyHint=True,
            destructiveHint=False,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_take_screenshot',
        title=None,
        description="Take a screenshot of the current page. You can't perform 
actions based on the screenshot, use browser_snapshot for actions.",
        inputSchema={
            'type': 'object',
            'properties': {
                'type': {
                    'type': 'string',
                    'enum': ['png', 'jpeg'],
                    'default': 'png',
                    'description': 'Image format for the screenshot. Default is 
png.'
                },
                'filename': {
                    'type': 'string',
                    'description': 'File name to save the screenshot to. 
Defaults to `page-{timestamp}.{png|jpeg}` if not specified.'
                },
                'element': {
                    'type': 'string',
                    'description': 'Human-readable element description used to 
obtain permission to screenshot the element. If not provided, the screenshot 
will be taken of viewport. If element is provided, ref must be provided too.'
                },
                'ref': {
                    'type': 'string',
                    'description': 'Exact target element reference from the page
snapshot. If not provided, the screenshot will be taken of viewport. If ref is 
provided, element must be provided too.'
                },
                'fullPage': {
                    'type': 'boolean',
                    'description': 'When true, takes a screenshot of the full 
scrollable page, instead of the currently visible viewport. Cannot be used with 
element screenshots.'
                }
            },
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='Take a screenshot',
            readOnlyHint=True,
            destructiveHint=False,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_snapshot',
        title=None,
        description='Capture accessibility snapshot of the current page, this is
better than screenshot',
        inputSchema={
            'type': 'object',
            'properties': {},
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='Page snapshot',
            readOnlyHint=True,
            destructiveHint=False,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_click',
        title=None,
        description='Perform click on a web page',
        inputSchema={
            'type': 'object',
            'properties': {
                'element': {
                    'type': 'string',
                    'description': 'Human-readable element description used to 
obtain permission to interact with the element'
                },
                'ref': {
                    'type': 'string',
                    'description': 'Exact target element reference from the page
snapshot'
                },
                'doubleClick': {
                    'type': 'boolean',
                    'description': 'Whether to perform a double click instead of
a single click'
                },
                'button': {
                    'type': 'string',
                    'enum': ['left', 'right', 'middle'],
                    'description': 'Button to click, defaults to left'
                }
            },
            'required': ['element', 'ref'],
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='Click',
            readOnlyHint=False,
            destructiveHint=True,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_drag',
        title=None,
        description='Perform drag and drop between two elements',
        inputSchema={
            'type': 'object',
            'properties': {
                'startElement': {
                    'type': 'string',
                    'description': 'Human-readable source element description 
used to obtain the permission to interact with the element'
                },
                'startRef': {
                    'type': 'string',
                    'description': 'Exact source element reference from the page
snapshot'
                },
                'endElement': {
                    'type': 'string',
                    'description': 'Human-readable target element description 
used to obtain the permission to interact with the element'
                },
                'endRef': {
                    'type': 'string',
                    'description': 'Exact target element reference from the page
snapshot'
                }
            },
            'required': ['startElement', 'startRef', 'endElement', 'endRef'],
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='Drag mouse',
            readOnlyHint=False,
            destructiveHint=True,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_hover',
        title=None,
        description='Hover over element on page',
        inputSchema={
            'type': 'object',
            'properties': {
                'element': {
                    'type': 'string',
                    'description': 'Human-readable element description used to 
obtain permission to interact with the element'
                },
                'ref': {
                    'type': 'string',
                    'description': 'Exact target element reference from the page
snapshot'
                }
            },
            'required': ['element', 'ref'],
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='Hover mouse',
            readOnlyHint=True,
            destructiveHint=False,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_select_option',
        title=None,
        description='Select an option in a dropdown',
        inputSchema={
            'type': 'object',
            'properties': {
                'element': {
                    'type': 'string',
                    'description': 'Human-readable element description used to 
obtain permission to interact with the element'
                },
                'ref': {
                    'type': 'string',
                    'description': 'Exact target element reference from the page
snapshot'
                },
                'values': {
                    'type': 'array',
                    'items': {'type': 'string'},
                    'description': 'Array of values to select in the dropdown. 
This can be a single value or multiple values.'
                }
            },
            'required': ['element', 'ref', 'values'],
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='Select option',
            readOnlyHint=False,
            destructiveHint=True,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_tab_list',
        title=None,
        description='List browser tabs',
        inputSchema={
            'type': 'object',
            'properties': {},
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='List tabs',
            readOnlyHint=True,
            destructiveHint=False,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_tab_new',
        title=None,
        description='Open a new tab',
        inputSchema={
            'type': 'object',
            'properties': {
                'url': {
                    'type': 'string',
                    'description': 'The URL to navigate to in the new tab. If 
not provided, the new tab will be blank.'
                }
            },
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='Open a new tab',
            readOnlyHint=True,
            destructiveHint=False,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_tab_select',
        title=None,
        description='Select a tab by index',
        inputSchema={
            'type': 'object',
            'properties': {
                'index': {
                    'type': 'number',
                    'description': 'The index of the tab to select'
                }
            },
            'required': ['index'],
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='Select a tab',
            readOnlyHint=True,
            destructiveHint=False,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_tab_close',
        title=None,
        description='Close a tab',
        inputSchema={
            'type': 'object',
            'properties': {
                'index': {
                    'type': 'number',
                    'description': 'The index of the tab to close. Closes 
current tab if not provided.'
                }
            },
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='Close a tab',
            readOnlyHint=False,
            destructiveHint=True,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    ),
    Tool(
        name='browser_wait_for',
        title=None,
        description='Wait for text to appear or disappear or a specified time to
pass',
        inputSchema={
            'type': 'object',
            'properties': {
                'time': {
                    'type': 'number',
                    'description': 'The time to wait in seconds'
                },
                'text': {
                    'type': 'string',
                    'description': 'The text to wait for'
                },
                'textGone': {
                    'type': 'string',
                    'description': 'The text to wait for to disappear'
                }
            },
            'additionalProperties': False,
            '$schema': 'http://json-schema.org/draft-07/schema#'
        },
        outputSchema=None,
        annotations=ToolAnnotations(
            title='Wait for',
            readOnlyHint=True,
            destructiveHint=False,
            idempotentHint=None,
            openWorldHint=True
        ),
        meta=None
    )
]
